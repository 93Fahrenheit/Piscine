XPLICATION DE TOUS LES CARACTÈRES SPÉCIAUX DANS LE NOM

Le nom contient : `"?$*'MaRViN'*$?"`

| Caractère | Rôle en shell                       | Pourquoi il pose problème ?         |
|-----------|--------------------------------------|-------------------------------------|
| `"`       | Délimite une chaîne                  | Peut fermer une chaîne ouverte      |
| `?`       | Joker : représente 1 caractère       | Interprété comme un motif           |
| `$`       | Préfixe de variable                  | Bash va tenter une substitution     |
| `*`       | Joker : représente plusieurs caractères | Peut matcher plein de fichiers   |
| `'`       | Délimite une chaîne (littérale)      | Peut couper ta commande             |

Donc : tous ces caractères ont une **signification spéciale** pour le shell → il faut les **échapper**.

🛠️ Création du fichier :
Commande à exécuter dans ton terminal :
echo -n "42" > \"?\$\*\'MaRViN\'\*\$\?\"

Explication :
- echo -n : affiche "42" sans saut de ligne
- > : redirige la sortie vers un fichier
- \"...\": nom du fichier, avec chaque caractère spécial précédé d’un \

🔍 Vérification :
ls -l | cat -e
→ pour afficher les fichiers, y compris les caractères spéciaux

cat -e \"?\$\*\'MaRViN\'\*\$\?\"
→ pour voir le contenu exact : doit afficher 42$

/!\ différent sur Zsh(=/= bash) 
cat -e \"\\\?\$\*\'MaRViN\'\*\$\?\\\"
-> il faut échapper le " ET le \ lui-même, ce qui donne \\\" au lieu de \"
OU
cat -e "$(ls | grep MaRViN)"

🗑️ Suppression du fichier :
rm \"?\$\*\'MaRViN\'\*\$\?\"


📌 Différence entre \" et \\" :
- Dans un script ou une commande terminal : un seul \ suffit → \"...\"
- Dans un texte affiché (documentation) : souvent on utilise deux \\ pour afficher le \ → \\"...\\" (ce n’est pas une commande à exécuter)


🧼 Astuce : si c’est trop pénible en ligne de commande, tu peux aussi créer un fichier temporaire puis le renommer graphiquement (clic droit > renommer).
